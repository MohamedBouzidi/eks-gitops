version: 0.2

env:
  git-credential-helper: yes
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - ECR_URL=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $ECR_URL
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $ECR_URL/$IMAGE_REPO_NAME:$IMAGE_TAG      
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $ECR_URL/$IMAGE_REPO_NAME:$IMAGE_TAG
      - CURRENT_BRANCH=$(git branch -a --contains HEAD | sed -n 2p | awk '{ printf $1 }')
      - git checkout $CURRENT_BRANCH
      - echo "image:" > $MANIFEST_PATH/image.yaml
      - echo -n "  repository:" >> $MANIFEST_PATH/image.yaml
      - echo " $ECR_URL/$IMAGE_REPO_NAME" >> $MANIFEST_PATH/image.yaml
      - echo -n "  tag:" >> $MANIFEST_PATH/image.yaml
      - echo " $IMAGE_TAG" >> $MANIFEST_PATH/image.yaml
      - GIT_AUTHOR_NAME="CodeBuild"
      - GIT_AUTHOR_EMAIL="codebuild@example.com"
      - GIT_COMMITTER_NAME=$GIT_AUTHOR_NAME
      - GIT_COMMITTER_EMAIL=$GIT_AUTHOR_EMAIL
      - git commit -am "CodeBuild Update app image to $IMAGE_REPO_NAME:$IMAGE_TAG"
      - git push --set-upstream origin $CURRENT_BRANCH

# To avoid second build, only do build on PR merge or ...
# Use lambda with CodePipeline to trigger build only if code changes